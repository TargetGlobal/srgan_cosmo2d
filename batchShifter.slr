#!/bin/bash -l
#SBATCH -N6 --ntasks-per-node=4 --gpus-per-task=1 --cpus-per-task=32 --exclusive
#SBATCH --time=6:00:00  -J srCos2d
#-SBATCH --time=30:00 
#SBATCH -C gpu -A nstaff_g
#SBATCH -q early_science # for early_science, higher priority
#SBATCH --image=nersc/pytorch:ngc-21.08-v2
#-SBATCH  -x cgpu08 # block sick nodes
# - - - E N D    O F    SLURM    C O M M A N D S

nprocspn=${SLURM_NTASKS_PER_NODE}
#nprocspn=1  # special case for partial use of full node

design=dev7c

N=${SLURM_NNODES}
G=$[ $N * $nprocspn ]
export MASTER_ADDR=`hostname`

echo S: JID=${SLURM_JOBID} MASTER_ADDR=$MASTER_ADDR  MASTER_PORT=${MASTER_PORT}=  G=$G  N=$N 
nodeList=$(scontrol show hostname $SLURM_NODELIST)
echo S:node-list $nodeList

# grab some variables from environment - if defined
[[ -z "${SRCOS2D_OTHER_PAR}" ]] && otherParStr="  " || otherParStr=" ${SRCOS2D_OTHER_PAR} "
[[ -z "${SRCOS2D_WRK_SUFIX}" ]] && wrkSufix=$SLURM_JOBID || wrkSufix="${SRCOS2D_WRK_SUFIX}"
env |grep SRCOS2D

if [[  $NERSC_HOST == cori ]]   ; then
    echo "S:on Cori-GPU"
    facility=corigpu
    ENGINE=" shifter "
elif [[  $NERSC_HOST == perlmutter ]]   ; then
    echo "S:on Perlmutter"
    facility=perlmutter
    module unload pytorch
    ENGINE=" shifter "
    # bash -c 'printf "#include <stdio.h>\nint main() {  cudaFree(0);printf(\"cudaFree-done\"); }" > dummy.cu && nvcc -o dummy.exe dummy.cu'
    #  opening and closing a GPU context on each node to reset GPUs
    time srun -n$N -l --ntasks-per-node=1 toolbox/dummy.exe

    #due to the NIC topology NCCL doesnâ€™t automatically use Direct RDMA  which controlls  the NICs for multi-node
    # https://docs.nvidia.com/deeplearning/nccl/user-guide/docs/env.html#nccl-net-gdr-level-formerly-nccl-ib-gdr-level

    export NCCL_NET_GDR_LEVEL=PHB  #enable Direct RDMA
    #export NCCL_NET_GDR_LEVEL=0 #off Direct RDMA 
fi

baseDir=$SCRATCH/tmp_NyxHydro4kG/
#baseDir=/global/homes/b/balewski/prje/tmp_NyxHydro4kF/
wrkDir=${baseDir}/$wrkSufix

echo "S: jobId=$SLURM_JOBID  wrkSufix=$wrkSufix  wrkDir=$wrkDir" 
date

export CMD=" python3 -u   train_dist.py    --facility $facility   --design $design --basePath $baseDir  --expName  $SLURM_JOBID   $otherParStr "


echo S: CMD=$CMD  ENGINE=$ENGINE

codeList="  train_dist.py  predict.py  toolbox/ batchShifter.slr  *.hpar.yaml  "

mkdir -p $wrkDir
cp -rp $codeList  $wrkDir
cd  $wrkDir
echo S:PWD=`pwd`

echo "S:starting   srgan_cosmo2 " `date` " wrkDir= $wrkDir"
time srun -n $G  $ENGINE  toolbox/driveOneTrain.sh  >& log.train

sleep 3

echo S:done train
time srun -n1  $ENGINE   ./predict.py --basePath $baseDir --expName $SLURM_JOBID --genSol last  >& log.predict
echo S:done predict
date
